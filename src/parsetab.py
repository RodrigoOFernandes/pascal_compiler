
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftPLUSMINUSleftTIMESDIVIDEleftDIVMODleftEQUALSDIFFERENTLESSEQUALLESSTHANGREATERTHANGREATEREQUALleftORANDAND ARRAY ASSIGN BEGIN BOOL BOOLEAN BREAK CASE COLON COMMA CONTINUE DIFFERENT DIV DIVIDE DO DOT DOWNTO ELSE END EQUALS FOR FUNCTION GREATEREQUAL GREATERTHAN ID IF INTEGER LBRACKET LESSEQUAL LESSTHAN LPAREN MINUS MOD NOT NUMBER OF OR PHRASE PLUS PROCEDURE PROGRAM RANGE RBRACKET READLN REAL REPEAT RPAREN SEMICOLON STRING THEN TIMES TO UNTIL VAR WHILE WRITELNprogram : header SEMICOLON block DOTheader : PROGRAM IDblock : variable_declaration_part procedure_or_function statement_partvariable_declaration_part : VAR variable_declaration_list\n                                  | variable_declaration_list : variable_declaration variable_declaration_list\n                                  | variable_declarationvariable_declaration : id_list COLON type SEMICOLONid_list : ID\n               | ID COMMA id_listprocedure_or_function : proc_or_func_declaration SEMICOLON procedure_or_function\n                              | proc_or_func_declaration : procedure_declaration\n                                 | function_declarationprocedure_declaration : procedure_heading SEMICOLON blockprocedure_heading : PROCEDURE ID\n                          | PROCEDURE ID LPAREN parameter_list RPARENfunction_declaration : function_heading SEMICOLON blockfunction_heading : FUNCTION type\n                         | FUNCTION ID COLON type\n                         | FUNCTION ID LPAREN parameter_list RPAREN COLON typeparameter_list : parameter COMMA parameter_list\n                       | parameterparameter : ID COLON typetype : REAL\n            | INTEGER\n            | BOOLEAN\n            | STRING\n            | array_typearray_type : ARRAY LBRACKET range RBRACKET OF typerange : expression RANGE expressionstatement_part : BEGIN statement_sequence ENDstatement_sequence : statement SEMICOLON statement_sequence\n                           | statementstatement : assignment_statement\n                 | statement_part\n                 | if_statement\n                 | while_statement\n                 | repeat_statement\n                 | for_statement\n                 | procedure_or_function_call\n                 | writeln_statement\n                 | readln_statement\n                 | break_statement\n                 | continue_statement\n                 | case_statement\n                 | case_statement : CASE expression OF case_list ENDcase_list : case_option SEMICOLON case_list\n                 | case_option SEMICOLONcase_option : NUMBER COLON statement\n                   | BOOL COLON statement\n                   | PHRASE COLON statement\n                   | ID COLON statementwriteln_statement : WRITELN LPAREN param_list RPAREN\n                          | WRITELN LPAREN RPARENreadln_statement : READLN LPAREN id_list RPAREN\n                        | READLN LPAREN RPARENbreak_statement : BREAK SEMICOLONcontinue_statement : CONTINUE SEMICOLONprocedure_or_function_call : ID LPAREN param_list RPAREN\n                                   | IDparam_list : param_list COMMA param\n                  | paramparam : expressionif_statement : IF expression THEN statement ELSE statement\n                    | IF expression THEN statementwhile_statement : WHILE expression DO statementrepeat_statement : REPEAT statement UNTIL expressionfor_statement : FOR assignment_statement TO expression DO statement\n                     | FOR assignment_statement DOWNTO expression DO statementassignment_statement : ID ASSIGN expressionexpression : expression and_or expression_m\n                  | expression_mexpression_m : expression_s\n                    | expression_m sign expression_sexpression_s : element\n                    | expression_s psign elementand_or : AND\n              | ORpsign : TIMES\n             | DIVIDEsign : PLUS\n            | MINUS\n            | DIV\n            | MOD\n            | EQUALS\n            | DIFFERENT\n            | LESSTHAN\n            | LESSEQUAL\n            | GREATERTHAN\n            | GREATEREQUALelement : ID\n               | NUMBER\n               | BOOL\n               | PHRASE\n               | LPAREN expression RPAREN\n               | NOT element'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,9,],[0,-1,]),'SEMICOLON':([2,5,11,12,13,14,15,22,23,27,28,30,31,32,33,34,40,41,42,43,44,45,46,47,48,49,50,51,52,53,60,61,64,65,70,72,73,77,78,79,80,81,82,83,92,93,98,104,108,127,128,133,135,138,143,145,146,147,148,149,150,151,154,155,157,168,169,170,171,173,174,175,176,177,178,179,180,181,183,184,185,186,],[4,-2,24,-13,-14,25,26,-3,-47,-16,-19,-25,-26,-27,-28,-29,73,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-62,92,93,-15,-18,102,-32,-47,-74,-75,-77,-93,-94,-95,-96,-59,-60,-20,-72,-47,-98,-47,-56,-58,-17,-61,-67,-73,-76,-78,-97,-68,-69,-55,-57,172,-47,-47,-47,-48,-47,-47,-47,-47,-21,-30,-66,-70,-71,-51,-52,-53,-54,]),'ID':([3,8,16,17,19,23,38,54,55,56,57,62,66,68,69,73,74,75,84,85,90,91,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,130,131,136,139,142,144,168,169,170,172,173,174,175,176,],[5,21,27,29,21,53,21,80,80,53,89,80,95,95,80,53,80,80,80,80,80,21,-8,53,80,-79,-80,80,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,80,-81,-82,53,80,80,80,161,95,80,80,53,53,53,161,53,53,53,53,]),'VAR':([4,25,26,],[8,8,8,]),'PROCEDURE':([4,7,18,19,24,25,26,36,102,],[-5,16,-4,-7,16,-5,-5,-6,-8,]),'FUNCTION':([4,7,18,19,24,25,26,36,102,],[-5,17,-4,-7,17,-5,-5,-6,-8,]),'BEGIN':([4,7,10,18,19,23,24,25,26,36,56,63,73,102,108,128,168,169,170,173,174,175,176,],[-5,-12,23,-4,-7,23,-12,-5,-5,-6,23,-11,23,-8,23,23,23,23,23,23,23,23,23,]),'DOT':([6,22,72,],[9,-3,-32,]),'REAL':([17,37,67,137,164,165,],[30,30,30,30,30,30,]),'INTEGER':([17,37,67,137,164,165,],[31,31,31,31,31,31,]),'BOOLEAN':([17,37,67,137,164,165,],[32,32,32,32,32,32,]),'STRING':([17,37,67,137,164,165,],[33,33,33,33,33,33,]),'ARRAY':([17,37,67,137,164,165,],[35,35,35,35,35,35,]),'COLON':([20,21,29,71,95,140,158,159,160,161,],[37,-9,67,-10,137,164,173,174,175,176,]),'RPAREN':([21,30,31,32,33,34,71,77,78,79,80,81,82,83,90,91,96,97,99,105,106,107,126,127,132,134,146,147,148,149,162,163,167,178,],[-9,-25,-26,-27,-28,-29,-10,-74,-75,-77,-93,-94,-95,-96,133,135,138,-23,140,143,-64,-65,149,-98,154,155,-73,-76,-78,-97,-24,-22,-63,-30,]),'COMMA':([21,30,31,32,33,34,77,78,79,80,81,82,83,97,105,106,107,127,132,146,147,148,149,162,167,178,],[38,-25,-26,-27,-28,-29,-74,-75,-77,-93,-94,-95,-96,139,144,-64,-65,-98,144,-73,-76,-78,-97,-24,-63,-30,]),'END':([23,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,72,73,77,78,79,80,81,82,83,92,93,103,104,108,127,128,133,135,143,145,146,147,148,149,150,151,154,155,156,168,169,170,171,172,179,180,181,182,],[-47,72,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-62,-32,-47,-74,-75,-77,-93,-94,-95,-96,-59,-60,-33,-72,-47,-98,-47,-56,-58,-61,-67,-73,-76,-78,-97,-68,-69,-55,-57,171,-47,-47,-47,-48,-50,-66,-70,-71,-49,]),'IF':([23,56,73,108,128,168,169,170,173,174,175,176,],[54,54,54,54,54,54,54,54,54,54,54,54,]),'WHILE':([23,56,73,108,128,168,169,170,173,174,175,176,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'REPEAT':([23,56,73,108,128,168,169,170,173,174,175,176,],[56,56,56,56,56,56,56,56,56,56,56,56,]),'FOR':([23,56,73,108,128,168,169,170,173,174,175,176,],[57,57,57,57,57,57,57,57,57,57,57,57,]),'WRITELN':([23,56,73,108,128,168,169,170,173,174,175,176,],[58,58,58,58,58,58,58,58,58,58,58,58,]),'READLN':([23,56,73,108,128,168,169,170,173,174,175,176,],[59,59,59,59,59,59,59,59,59,59,59,59,]),'BREAK':([23,56,73,108,128,168,169,170,173,174,175,176,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'CONTINUE':([23,56,73,108,128,168,169,170,173,174,175,176,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'CASE':([23,56,73,108,128,168,169,170,173,174,175,176,],[62,62,62,62,62,62,62,62,62,62,62,62,]),'LPAREN':([27,29,53,54,55,58,59,62,69,74,75,84,85,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,142,144,],[66,68,75,84,84,90,91,84,84,84,84,84,84,84,84,-79,-80,84,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,84,-81,-82,84,84,84,84,84,]),'LBRACKET':([35,],[69,]),'UNTIL':([41,42,43,44,45,46,47,48,49,50,51,52,53,56,72,77,78,79,80,81,82,83,87,92,93,104,108,127,128,133,135,143,145,146,147,148,149,150,151,154,155,168,169,170,171,179,180,181,],[-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-62,-47,-32,-74,-75,-77,-93,-94,-95,-96,129,-59,-60,-72,-47,-98,-47,-56,-58,-61,-67,-73,-76,-78,-97,-68,-69,-55,-57,-47,-47,-47,-48,-66,-70,-71,]),'ELSE':([41,42,43,44,45,46,47,48,49,50,51,52,53,72,77,78,79,80,81,82,83,92,93,104,108,127,128,133,135,143,145,146,147,148,149,150,151,154,155,168,169,170,171,179,180,181,],[-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-62,-32,-74,-75,-77,-93,-94,-95,-96,-59,-60,-72,-47,-98,-47,-56,-58,-61,168,-73,-76,-78,-97,-68,-69,-55,-57,-47,-47,-47,-48,-66,-70,-71,]),'ASSIGN':([53,89,],[74,74,]),'NUMBER':([54,55,62,69,74,75,84,85,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,136,142,144,172,],[81,81,81,81,81,81,81,81,81,81,-79,-80,81,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,81,-81,-82,81,81,81,158,81,81,158,]),'BOOL':([54,55,62,69,74,75,84,85,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,136,142,144,172,],[82,82,82,82,82,82,82,82,82,82,-79,-80,82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,82,-81,-82,82,82,82,159,82,82,159,]),'PHRASE':([54,55,62,69,74,75,84,85,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,136,142,144,172,],[83,83,83,83,83,83,83,83,83,83,-79,-80,83,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,83,-81,-82,83,83,83,160,83,83,160,]),'NOT':([54,55,62,69,74,75,84,85,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,131,142,144,],[85,85,85,85,85,85,85,85,85,85,-79,-80,85,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,85,-81,-82,85,85,85,85,85,]),'THEN':([76,77,78,79,80,81,82,83,127,146,147,148,149,],[108,-74,-75,-77,-93,-94,-95,-96,-98,-73,-76,-78,-97,]),'AND':([76,77,78,79,80,81,82,83,86,94,101,104,107,126,127,146,147,148,149,151,152,153,166,],[110,-74,-75,-77,-93,-94,-95,-96,110,110,110,110,110,110,-98,-73,-76,-78,-97,110,110,110,110,]),'OR':([76,77,78,79,80,81,82,83,86,94,101,104,107,126,127,146,147,148,149,151,152,153,166,],[111,-74,-75,-77,-93,-94,-95,-96,111,111,111,111,111,111,-98,-73,-76,-78,-97,111,111,111,111,]),'DO':([77,78,79,80,81,82,83,86,127,146,147,148,149,152,153,],[-74,-75,-77,-93,-94,-95,-96,128,-98,-73,-76,-78,-97,169,170,]),'OF':([77,78,79,80,81,82,83,94,127,141,146,147,148,149,],[-74,-75,-77,-93,-94,-95,-96,136,-98,165,-73,-76,-78,-97,]),'RANGE':([77,78,79,80,81,82,83,101,127,146,147,148,149,],[-74,-75,-77,-93,-94,-95,-96,142,-98,-73,-76,-78,-97,]),'TO':([77,78,79,80,81,82,83,88,104,127,146,147,148,149,],[-74,-75,-77,-93,-94,-95,-96,130,-72,-98,-73,-76,-78,-97,]),'DOWNTO':([77,78,79,80,81,82,83,88,104,127,146,147,148,149,],[-74,-75,-77,-93,-94,-95,-96,131,-72,-98,-73,-76,-78,-97,]),'RBRACKET':([77,78,79,80,81,82,83,100,127,146,147,148,149,166,],[-74,-75,-77,-93,-94,-95,-96,141,-98,-73,-76,-78,-97,-31,]),'PLUS':([77,78,79,80,81,82,83,127,146,147,148,149,],[113,-75,-77,-93,-94,-95,-96,-98,113,-76,-78,-97,]),'MINUS':([77,78,79,80,81,82,83,127,146,147,148,149,],[114,-75,-77,-93,-94,-95,-96,-98,114,-76,-78,-97,]),'DIV':([77,78,79,80,81,82,83,127,146,147,148,149,],[115,-75,-77,-93,-94,-95,-96,-98,115,-76,-78,-97,]),'MOD':([77,78,79,80,81,82,83,127,146,147,148,149,],[116,-75,-77,-93,-94,-95,-96,-98,116,-76,-78,-97,]),'EQUALS':([77,78,79,80,81,82,83,127,146,147,148,149,],[117,-75,-77,-93,-94,-95,-96,-98,117,-76,-78,-97,]),'DIFFERENT':([77,78,79,80,81,82,83,127,146,147,148,149,],[118,-75,-77,-93,-94,-95,-96,-98,118,-76,-78,-97,]),'LESSTHAN':([77,78,79,80,81,82,83,127,146,147,148,149,],[119,-75,-77,-93,-94,-95,-96,-98,119,-76,-78,-97,]),'LESSEQUAL':([77,78,79,80,81,82,83,127,146,147,148,149,],[120,-75,-77,-93,-94,-95,-96,-98,120,-76,-78,-97,]),'GREATERTHAN':([77,78,79,80,81,82,83,127,146,147,148,149,],[121,-75,-77,-93,-94,-95,-96,-98,121,-76,-78,-97,]),'GREATEREQUAL':([77,78,79,80,81,82,83,127,146,147,148,149,],[122,-75,-77,-93,-94,-95,-96,-98,122,-76,-78,-97,]),'TIMES':([78,79,80,81,82,83,127,147,148,149,],[124,-77,-93,-94,-95,-96,-98,124,-78,-97,]),'DIVIDE':([78,79,80,81,82,83,127,147,148,149,],[125,-77,-93,-94,-95,-96,-98,125,-78,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'header':([0,],[2,]),'block':([4,25,26,],[6,64,65,]),'variable_declaration_part':([4,25,26,],[7,7,7,]),'procedure_or_function':([7,24,],[10,63,]),'proc_or_func_declaration':([7,24,],[11,11,]),'procedure_declaration':([7,24,],[12,12,]),'function_declaration':([7,24,],[13,13,]),'procedure_heading':([7,24,],[14,14,]),'function_heading':([7,24,],[15,15,]),'variable_declaration_list':([8,19,],[18,36,]),'variable_declaration':([8,19,],[19,19,]),'id_list':([8,19,38,91,],[20,20,71,134,]),'statement_part':([10,23,56,73,108,128,168,169,170,173,174,175,176,],[22,42,42,42,42,42,42,42,42,42,42,42,42,]),'type':([17,37,67,137,164,165,],[28,70,98,162,177,178,]),'array_type':([17,37,67,137,164,165,],[34,34,34,34,34,34,]),'statement_sequence':([23,73,],[39,103,]),'statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[40,87,40,145,150,179,180,181,183,184,185,186,]),'assignment_statement':([23,56,57,73,108,128,168,169,170,173,174,175,176,],[41,41,88,41,41,41,41,41,41,41,41,41,41,]),'if_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'while_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'repeat_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'for_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[46,46,46,46,46,46,46,46,46,46,46,46,]),'procedure_or_function_call':([23,56,73,108,128,168,169,170,173,174,175,176,],[47,47,47,47,47,47,47,47,47,47,47,47,]),'writeln_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[48,48,48,48,48,48,48,48,48,48,48,48,]),'readln_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[49,49,49,49,49,49,49,49,49,49,49,49,]),'break_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[50,50,50,50,50,50,50,50,50,50,50,50,]),'continue_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[51,51,51,51,51,51,51,51,51,51,51,51,]),'case_statement':([23,56,73,108,128,168,169,170,173,174,175,176,],[52,52,52,52,52,52,52,52,52,52,52,52,]),'expression':([54,55,62,69,74,75,84,90,129,130,131,142,144,],[76,86,94,101,104,107,126,107,151,152,153,166,107,]),'expression_m':([54,55,62,69,74,75,84,90,109,129,130,131,142,144,],[77,77,77,77,77,77,77,77,146,77,77,77,77,77,]),'expression_s':([54,55,62,69,74,75,84,90,109,112,129,130,131,142,144,],[78,78,78,78,78,78,78,78,78,147,78,78,78,78,78,]),'element':([54,55,62,69,74,75,84,85,90,109,112,123,129,130,131,142,144,],[79,79,79,79,79,79,79,127,79,79,79,148,79,79,79,79,79,]),'parameter_list':([66,68,139,],[96,99,163,]),'parameter':([66,68,139,],[97,97,97,]),'range':([69,],[100,]),'param_list':([75,90,],[105,132,]),'param':([75,90,144,],[106,106,167,]),'and_or':([76,86,94,101,104,107,126,151,152,153,166,],[109,109,109,109,109,109,109,109,109,109,109,]),'sign':([77,146,],[112,112,]),'psign':([78,147,],[123,123,]),'case_list':([136,172,],[156,182,]),'case_option':([136,172,],[157,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> header SEMICOLON block DOT','program',4,'p_program','pasSyn.py',17),
  ('header -> PROGRAM ID','header',2,'p_header','pasSyn.py',21),
  ('block -> variable_declaration_part procedure_or_function statement_part','block',3,'p_block','pasSyn.py',25),
  ('variable_declaration_part -> VAR variable_declaration_list','variable_declaration_part',2,'p_variable_declaration_part','pasSyn.py',29),
  ('variable_declaration_part -> <empty>','variable_declaration_part',0,'p_variable_declaration_part','pasSyn.py',30),
  ('variable_declaration_list -> variable_declaration variable_declaration_list','variable_declaration_list',2,'p_variable_declaration_list','pasSyn.py',34),
  ('variable_declaration_list -> variable_declaration','variable_declaration_list',1,'p_variable_declaration_list','pasSyn.py',35),
  ('variable_declaration -> id_list COLON type SEMICOLON','variable_declaration',4,'p_variable_declaration','pasSyn.py',39),
  ('id_list -> ID','id_list',1,'p_id_list','pasSyn.py',43),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','pasSyn.py',44),
  ('procedure_or_function -> proc_or_func_declaration SEMICOLON procedure_or_function','procedure_or_function',3,'p_procedure_or_function','pasSyn.py',48),
  ('procedure_or_function -> <empty>','procedure_or_function',0,'p_procedure_or_function','pasSyn.py',49),
  ('proc_or_func_declaration -> procedure_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration','pasSyn.py',53),
  ('proc_or_func_declaration -> function_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration','pasSyn.py',54),
  ('procedure_declaration -> procedure_heading SEMICOLON block','procedure_declaration',3,'p_procedure_declaration','pasSyn.py',58),
  ('procedure_heading -> PROCEDURE ID','procedure_heading',2,'p_procedure_heading','pasSyn.py',62),
  ('procedure_heading -> PROCEDURE ID LPAREN parameter_list RPAREN','procedure_heading',5,'p_procedure_heading','pasSyn.py',63),
  ('function_declaration -> function_heading SEMICOLON block','function_declaration',3,'p_function_declaration','pasSyn.py',67),
  ('function_heading -> FUNCTION type','function_heading',2,'p_function_heading','pasSyn.py',71),
  ('function_heading -> FUNCTION ID COLON type','function_heading',4,'p_function_heading','pasSyn.py',72),
  ('function_heading -> FUNCTION ID LPAREN parameter_list RPAREN COLON type','function_heading',7,'p_function_heading','pasSyn.py',73),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','pasSyn.py',77),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','pasSyn.py',78),
  ('parameter -> ID COLON type','parameter',3,'p_parameter','pasSyn.py',82),
  ('type -> REAL','type',1,'p_type','pasSyn.py',86),
  ('type -> INTEGER','type',1,'p_type','pasSyn.py',87),
  ('type -> BOOLEAN','type',1,'p_type','pasSyn.py',88),
  ('type -> STRING','type',1,'p_type','pasSyn.py',89),
  ('type -> array_type','type',1,'p_type','pasSyn.py',90),
  ('array_type -> ARRAY LBRACKET range RBRACKET OF type','array_type',6,'p_array_type','pasSyn.py',94),
  ('range -> expression RANGE expression','range',3,'p_range','pasSyn.py',98),
  ('statement_part -> BEGIN statement_sequence END','statement_part',3,'p_statement_part','pasSyn.py',102),
  ('statement_sequence -> statement SEMICOLON statement_sequence','statement_sequence',3,'p_statement_sequence','pasSyn.py',106),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence','pasSyn.py',107),
  ('statement -> assignment_statement','statement',1,'p_statement','pasSyn.py',111),
  ('statement -> statement_part','statement',1,'p_statement','pasSyn.py',112),
  ('statement -> if_statement','statement',1,'p_statement','pasSyn.py',113),
  ('statement -> while_statement','statement',1,'p_statement','pasSyn.py',114),
  ('statement -> repeat_statement','statement',1,'p_statement','pasSyn.py',115),
  ('statement -> for_statement','statement',1,'p_statement','pasSyn.py',116),
  ('statement -> procedure_or_function_call','statement',1,'p_statement','pasSyn.py',117),
  ('statement -> writeln_statement','statement',1,'p_statement','pasSyn.py',118),
  ('statement -> readln_statement','statement',1,'p_statement','pasSyn.py',119),
  ('statement -> break_statement','statement',1,'p_statement','pasSyn.py',120),
  ('statement -> continue_statement','statement',1,'p_statement','pasSyn.py',121),
  ('statement -> case_statement','statement',1,'p_statement','pasSyn.py',122),
  ('statement -> <empty>','statement',0,'p_statement','pasSyn.py',123),
  ('case_statement -> CASE expression OF case_list END','case_statement',5,'p_case_statement','pasSyn.py',127),
  ('case_list -> case_option SEMICOLON case_list','case_list',3,'p_case_list','pasSyn.py',131),
  ('case_list -> case_option SEMICOLON','case_list',2,'p_case_list','pasSyn.py',132),
  ('case_option -> NUMBER COLON statement','case_option',3,'p_case_option','pasSyn.py',135),
  ('case_option -> BOOL COLON statement','case_option',3,'p_case_option','pasSyn.py',136),
  ('case_option -> PHRASE COLON statement','case_option',3,'p_case_option','pasSyn.py',137),
  ('case_option -> ID COLON statement','case_option',3,'p_case_option','pasSyn.py',138),
  ('writeln_statement -> WRITELN LPAREN param_list RPAREN','writeln_statement',4,'p_writeln_statement','pasSyn.py',142),
  ('writeln_statement -> WRITELN LPAREN RPAREN','writeln_statement',3,'p_writeln_statement','pasSyn.py',143),
  ('readln_statement -> READLN LPAREN id_list RPAREN','readln_statement',4,'p_readln_statement','pasSyn.py',147),
  ('readln_statement -> READLN LPAREN RPAREN','readln_statement',3,'p_readln_statement','pasSyn.py',148),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','pasSyn.py',152),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','pasSyn.py',156),
  ('procedure_or_function_call -> ID LPAREN param_list RPAREN','procedure_or_function_call',4,'p_procedure_or_function_call','pasSyn.py',161),
  ('procedure_or_function_call -> ID','procedure_or_function_call',1,'p_procedure_or_function_call','pasSyn.py',162),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','pasSyn.py',166),
  ('param_list -> param','param_list',1,'p_param_list','pasSyn.py',167),
  ('param -> expression','param',1,'p_param','pasSyn.py',171),
  ('if_statement -> IF expression THEN statement ELSE statement','if_statement',6,'p_if_statement','pasSyn.py',175),
  ('if_statement -> IF expression THEN statement','if_statement',4,'p_if_statement','pasSyn.py',176),
  ('while_statement -> WHILE expression DO statement','while_statement',4,'p_while_statement','pasSyn.py',180),
  ('repeat_statement -> REPEAT statement UNTIL expression','repeat_statement',4,'p_repeat_statement','pasSyn.py',184),
  ('for_statement -> FOR assignment_statement TO expression DO statement','for_statement',6,'p_for_statement','pasSyn.py',188),
  ('for_statement -> FOR assignment_statement DOWNTO expression DO statement','for_statement',6,'p_for_statement','pasSyn.py',189),
  ('assignment_statement -> ID ASSIGN expression','assignment_statement',3,'p_assignment_statement','pasSyn.py',193),
  ('expression -> expression and_or expression_m','expression',3,'p_expression','pasSyn.py',197),
  ('expression -> expression_m','expression',1,'p_expression','pasSyn.py',198),
  ('expression_m -> expression_s','expression_m',1,'p_expression_m','pasSyn.py',202),
  ('expression_m -> expression_m sign expression_s','expression_m',3,'p_expression_m','pasSyn.py',203),
  ('expression_s -> element','expression_s',1,'p_expression_s','pasSyn.py',207),
  ('expression_s -> expression_s psign element','expression_s',3,'p_expression_s','pasSyn.py',208),
  ('and_or -> AND','and_or',1,'p_and_or','pasSyn.py',212),
  ('and_or -> OR','and_or',1,'p_and_or','pasSyn.py',213),
  ('psign -> TIMES','psign',1,'p_psign','pasSyn.py',217),
  ('psign -> DIVIDE','psign',1,'p_psign','pasSyn.py',218),
  ('sign -> PLUS','sign',1,'p_sign','pasSyn.py',222),
  ('sign -> MINUS','sign',1,'p_sign','pasSyn.py',223),
  ('sign -> DIV','sign',1,'p_sign','pasSyn.py',224),
  ('sign -> MOD','sign',1,'p_sign','pasSyn.py',225),
  ('sign -> EQUALS','sign',1,'p_sign','pasSyn.py',226),
  ('sign -> DIFFERENT','sign',1,'p_sign','pasSyn.py',227),
  ('sign -> LESSTHAN','sign',1,'p_sign','pasSyn.py',228),
  ('sign -> LESSEQUAL','sign',1,'p_sign','pasSyn.py',229),
  ('sign -> GREATERTHAN','sign',1,'p_sign','pasSyn.py',230),
  ('sign -> GREATEREQUAL','sign',1,'p_sign','pasSyn.py',231),
  ('element -> ID','element',1,'p_element','pasSyn.py',235),
  ('element -> NUMBER','element',1,'p_element','pasSyn.py',236),
  ('element -> BOOL','element',1,'p_element','pasSyn.py',237),
  ('element -> PHRASE','element',1,'p_element','pasSyn.py',238),
  ('element -> LPAREN expression RPAREN','element',3,'p_element','pasSyn.py',239),
  ('element -> NOT element','element',2,'p_element','pasSyn.py',240),
]
